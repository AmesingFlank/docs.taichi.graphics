(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{508:function(e,t,a){"use strict";a.r(t);var v=a(20),o=Object(v.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"vectors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vectors"}},[e._v("#")]),e._v(" Vectors")]),e._v(" "),a("p",[e._v("A vector in Taichi can have two forms:")]),e._v(" "),a("ul",[a("li",[e._v("as a temporary local variable. An "),a("code",[e._v("n")]),e._v(" component vector consists of\n"),a("code",[e._v("n")]),e._v(" scalar values.")]),e._v(" "),a("li",[e._v("as an element of a global field. In this case, the field is an\nN-dimensional array of "),a("code",[e._v("n")]),e._v(" component vectors.")])]),e._v(" "),a("p",[e._v("In fact, "),a("code",[e._v("Vector")]),e._v(" is simply an alias of "),a("code",[e._v("Matrix")]),e._v(", just with "),a("code",[e._v("m = 1")]),e._v(". See\n"),a("code",[e._v("matrix")]),e._v('{.interpreted-text role="ref"} and '),a("code",[e._v("tensor")]),e._v('{.interpreted-text\nrole="ref"} for more details.')]),e._v(" "),a("h2",{attrs:{id:"declaration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#declaration"}},[e._v("#")]),e._v(" Declaration")]),e._v(" "),a("h3",{attrs:{id:"as-global-vector-fields"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#as-global-vector-fields"}},[e._v("#")]),e._v(" As global vector fields")]),e._v(" "),a("p",[e._v("::: {.function}\nti.Vector.field(n, dtype, shape = None, offset = None)")]),e._v(" "),a("p",[e._v("parameter n")]),e._v(" "),a("p",[e._v(": (scalar) the number of components in the vector")]),e._v(" "),a("p",[e._v("parameter dtype")]),e._v(" "),a("p",[e._v(": (DataType) data type of the components")]),e._v(" "),a("p",[e._v("parameter shape")]),e._v(" "),a("p",[e._v(": (optional, scalar or tuple) shape of the vector field, see\n"),a("code",[e._v("tensor")]),e._v('{.interpreted-text role="ref"}')]),e._v(" "),a("p",[e._v("parameter offset")]),e._v(" "),a("p",[e._v(": (optional, scalar or tuple) see "),a("code",[e._v("offset")]),e._v('{.interpreted-text\nrole="ref"}')]),e._v(" "),a("p",[e._v("For example, this creates a 3-D vector field of the shape of "),a("code",[e._v("5x4")]),e._v(": :")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("# Python-scope\na = ti.Vector.field(3, dtype=ti.f32, shape=(5, 4))\n")])])]),a("p",[e._v(":::")]),e._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[e._v("注解")]),e._v(" "),a("p",[e._v("In Python-scope, "),a("code",[e._v("ti.field")]),e._v(" declares a scalar field\n"),a("RouterLink",{attrs:{to:"/zh/docs/develop/documentation/api/scalar_field.html"}},[e._v("Scalar fields")]),e._v("), while "),a("code",[e._v("ti.Vector.field")]),e._v("\ndeclares a vector field.")],1)]),e._v(" "),a("h3",{attrs:{id:"as-a-temporary-local-variable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#as-a-temporary-local-variable"}},[e._v("#")]),e._v(" As a temporary local variable")]),e._v(" "),a("p",[e._v("::: {.function}\nti.Vector([x, y, ...])")]),e._v(" "),a("p",[e._v("parameter x")]),e._v(" "),a("p",[e._v(": (scalar) the first component of the vector")]),e._v(" "),a("p",[e._v("parameter y")]),e._v(" "),a("p",[e._v(": (scalar) the second component of the vector")]),e._v(" "),a("p",[e._v("For example, this creates a 3D vector with components (2, 3, 4): :")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("# Taichi-scope\na = ti.Vector([2, 3, 4])\n")])])]),a("p",[e._v(":::")]),e._v(" "),a("h2",{attrs:{id:"accessing-components"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#accessing-components"}},[e._v("#")]),e._v(" Accessing components")]),e._v(" "),a("h3",{attrs:{id:"as-global-vector-fields-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#as-global-vector-fields-2"}},[e._v("#")]),e._v(" As global vector fields")]),e._v(" "),a("p",[e._v("::: {.attribute}\na[p, q, ...][i]")]),e._v(" "),a("p",[e._v("parameter a")]),e._v(" "),a("p",[e._v(": (ti.Vector.field) the vector")]),e._v(" "),a("p",[e._v("parameter p")]),e._v(" "),a("p",[e._v(": (scalar) index of the first field dimension")]),e._v(" "),a("p",[e._v("parameter q")]),e._v(" "),a("p",[e._v(": (scalar) index of the second field dimension")]),e._v(" "),a("p",[e._v("parameter i")]),e._v(" "),a("p",[e._v(": (scalar) index of the vector component")]),e._v(" "),a("p",[e._v("This extracts the first component of vector "),a("code",[e._v("a[6, 3]")]),e._v(": :")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("x = a[6, 3][0]\n\n# or\nvec = a[6, 3]\nx = vec[0]\n")])])]),a("p",[e._v(":::")]),e._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[e._v("注解")]),e._v(" "),a("p",[a("strong",[e._v("Always")]),e._v(" use two pairs of square brackets to access scalar elements\nfrom vector fields.")]),e._v(" "),a("ul",[a("li",[e._v("The indices in the first pair of brackets locate the vector inside\nthe vector fields;")]),e._v(" "),a("li",[e._v("The indices in the second pair of brackets locate the scalar\nelement inside the vector.")])]),e._v(" "),a("p",[e._v("For 0-D vector fields, indices in the first pair of brackets should be\n"),a("code",[e._v("[None]")]),e._v(".")])]),e._v(" "),a("h3",{attrs:{id:"as-a-temporary-local-variable-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#as-a-temporary-local-variable-2"}},[e._v("#")]),e._v(" As a temporary local variable")]),e._v(" "),a("p",[e._v("::: {.attribute}\na[i]")]),e._v(" "),a("p",[e._v("parameter a")]),e._v(" "),a("p",[e._v(": (Vector) the vector")]),e._v(" "),a("p",[e._v("parameter i")]),e._v(" "),a("p",[e._v(": (scalar) index of the component")]),e._v(" "),a("p",[e._v("For example, this extracts the first component of vector "),a("code",[e._v("a")]),e._v(": :")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("x = a[0]\n")])])]),a("p",[e._v("This sets the second component of "),a("code",[e._v("a")]),e._v(" to 4: :")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("a[1] = 4\n")])])]),a("p",[e._v("TODO: add descriptions about "),a("code",[e._v("a(i, j)")]),e._v("\n:::")]),e._v(" "),a("h3",{attrs:{id:"xyzw-vector-component-accessors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xyzw-vector-component-accessors"}},[e._v("#")]),e._v(" XYZW vector component accessors")]),e._v(" "),a("p",[e._v("We also provide four handy accessors for the first four vector\ncomponents:")]),e._v(" "),a("p",[e._v("::: {.attribute}\na.x")]),e._v(" "),a("p",[e._v("Same as "),a("code",[e._v("a[0]")]),e._v(".\n:::")]),e._v(" "),a("p",[e._v("::: {.attribute}\na.y")]),e._v(" "),a("p",[e._v("Same as "),a("code",[e._v("a[1]")]),e._v(".\n:::")]),e._v(" "),a("p",[e._v("::: {.attribute}\na.z")]),e._v(" "),a("p",[e._v("Same as "),a("code",[e._v("a[2]")]),e._v(".\n:::")]),e._v(" "),a("p",[e._v("::: {.attribute}\na.w")]),e._v(" "),a("p",[e._v("Same as "),a("code",[e._v("a[3]")]),e._v(".\n:::")]),e._v(" "),a("p",[e._v("::: {.note}\n::: {.title}\nNote\n:::")]),e._v(" "),a("p",[e._v("XYZW accessors can be used for both reading and writing:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("v = ti.Vector([2, 3, 4])\nprint(v.x)  # 2\nprint(v.y)  # 3\nprint(v.z)  # 4\nv.y = 8\nprint(v.y)  # 8\n")])])]),a("p",[e._v("XYZW accessors can be used in both Taichi-scope and Python-scope.")]),e._v(" "),a("p",[e._v("XYZW accessors don't work for "),a("code",[e._v("ti.Matrix")]),e._v(".")]),e._v(" "),a("p",[e._v("For GLSL-alike shuffling accessors, consider using\n"),a("a",{attrs:{href:"https://taichi-glsl.readthedocs.io",target:"_blank",rel:"noopener noreferrer"}},[e._v("taichi_glsl"),a("OutboundLink")],1),e._v(":")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("import taichi_glsl as tl\n\nv = tl.vec(2, 3, 4)\nprint(v.xy)  # [2 3]\nprint(v._xYzX_z)  # [0 2 -3 4 -2 0 4]\n")])])]),a("p",[e._v(":::")]),e._v(" "),a("h2",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),a("p",[e._v("::: {.function}\na.norm(eps = 0)")]),e._v(" "),a("p",[e._v("parameter a")]),e._v(" "),a("p",[e._v(": (ti.Vector)")]),e._v(" "),a("p",[e._v("parameter eps")]),e._v(" "),a("p",[e._v(": (optional, scalar) a safe-guard value for "),a("code",[e._v("sqrt")]),e._v(", usually 0. See the\nnote below.")]),e._v(" "),a("p",[e._v("return")]),e._v(" "),a("p",[e._v(": (scalar) the magnitude / length / norm of vector")]),e._v(" "),a("p",[e._v("For example, :")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("a = ti.Vector([3, 4])\na.norm() # sqrt(3*3 + 4*4 + 0) = 5\n")])])]),a("p",[a("code",[e._v("a.norm(eps)")]),e._v(" is equivalent to "),a("code",[e._v("ti.sqrt(a.dot(a) + eps)")]),e._v("\n:::")]),e._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[e._v("注解")]),e._v(" "),a("p",[e._v("To safeguard the operator's gradient on zero vectors during\ndifferentiable programming, set "),a("code",[e._v("eps")]),e._v(" to a small, positive value such as\n"),a("code",[e._v("1e-5")]),e._v(".")])]),e._v(" "),a("p",[e._v("::: {.function}\na.norm_sqr()")]),e._v(" "),a("p",[e._v("parameter a")]),e._v(" "),a("p",[e._v(": (ti.Vector)")]),e._v(" "),a("p",[e._v("return")]),e._v(" "),a("p",[e._v(": (scalar) the square of the magnitude / length / norm of vector")]),e._v(" "),a("p",[e._v("For example, :")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("a = ti.Vector([3, 4])\na.norm_sqr() # 3*3 + 4*4 = 25\n")])])]),a("p",[a("code",[e._v("a.norm_sqr()")]),e._v(" is equivalent to "),a("code",[e._v("a.dot(a)")]),e._v("\n:::")]),e._v(" "),a("p",[e._v("::: {.function}\na.normalized()")]),e._v(" "),a("p",[e._v("parameter a")]),e._v(" "),a("p",[e._v(": (ti.Vector)")]),e._v(" "),a("p",[e._v("return")]),e._v(" "),a("p",[e._v(": (ti.Vector) the normalized / unit vector of "),a("code",[e._v("a")])]),e._v(" "),a("p",[e._v("For example, :")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("a = ti.Vector([3, 4])\na.normalized() # [3 / 5, 4 / 5]\n")])])]),a("p",[a("code",[e._v("a.normalized()")]),e._v(" is equivalent to "),a("code",[e._v("a / a.norm()")]),e._v(".\n:::")]),e._v(" "),a("p",[e._v("::: {.function}\na.dot(b)")]),e._v(" "),a("p",[e._v("parameter a")]),e._v(" "),a("p",[e._v(": (ti.Vector)")]),e._v(" "),a("p",[e._v("parameter b")]),e._v(" "),a("p",[e._v(": (ti.Vector)")]),e._v(" "),a("p",[e._v("return")]),e._v(" "),a("p",[e._v(": (scalar) the dot (inner) product of "),a("code",[e._v("a")]),e._v(" and "),a("code",[e._v("b")])]),e._v(" "),a("p",[e._v("E.g., :")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("a = ti.Vector([1, 3])\nb = ti.Vector([2, 4])\na.dot(b) # 1*2 + 3*4 = 14\n")])])]),a("p",[e._v(":::")]),e._v(" "),a("p",[e._v("::: {.function}\na.cross(b)")]),e._v(" "),a("p",[e._v("parameter a")]),e._v(" "),a("p",[e._v(": (ti.Vector, 2 or 3 components)")]),e._v(" "),a("p",[e._v("parameter b")]),e._v(" "),a("p",[e._v(": (ti.Vector of the same size as a)")]),e._v(" "),a("p",[e._v("return")]),e._v(" "),a("p",[e._v(": (scalar (for 2D inputs), or 3D Vector (for 3D inputs)) the cross\nproduct of "),a("code",[e._v("a")]),e._v(" and "),a("code",[e._v("b")])]),e._v(" "),a("p",[e._v("We use a right-handed coordinate system. E.g., :")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("a = ti.Vector([1, 2, 3])\nb = ti.Vector([4, 5, 6])\nc = ti.cross(a, b)\n# c = [2*6 - 5*3, 4*3 - 1*6, 1*5 - 4*2] = [-3, 6, -3]\n\np = ti.Vector([1, 2])\nq = ti.Vector([4, 5])\nr = ti.cross(a, b)\n# r = 1*5 - 4*2 = -3\n")])])]),a("p",[e._v(":::")]),e._v(" "),a("p",[e._v("::: {.function}\na.outer_product(b)")]),e._v(" "),a("p",[e._v("parameter a")]),e._v(" "),a("p",[e._v(": (ti.Vector)")]),e._v(" "),a("p",[e._v("parameter b")]),e._v(" "),a("p",[e._v(": (ti.Vector)")]),e._v(" "),a("p",[e._v("return")]),e._v(" "),a("p",[e._v(": (ti.Matrix) the outer product of "),a("code",[e._v("a")]),e._v(" and "),a("code",[e._v("b")])]),e._v(" "),a("p",[e._v("E.g., :")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("a = ti.Vector([1, 2])\nb = ti.Vector([4, 5, 6])\nc = ti.outer_product(a, b) # NOTE: c[i, j] = a[i] * b[j]\n# c = [[1*4, 1*5, 1*6], [2*4, 2*5, 2*6]]\n")])])]),a("p",[e._v(":::")]),e._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[e._v("注解")]),e._v(" "),a("p",[e._v("The outer product should not be confused with the cross product\n("),a("code",[e._v("ti.cross")]),e._v("). For example, "),a("code",[e._v("a")]),e._v(" and "),a("code",[e._v("b")]),e._v(" do not have to be 2- or\n3-component vectors for this function.")])]),e._v(" "),a("p",[e._v("::: {.function}\na.cast(dt)")]),e._v(" "),a("p",[e._v("parameter a")]),e._v(" "),a("p",[e._v(": (ti.Vector)")]),e._v(" "),a("p",[e._v("parameter dt")]),e._v(" "),a("p",[e._v(": (DataType)")]),e._v(" "),a("p",[e._v("return")]),e._v(" "),a("p",[e._v(": (ti.Vector) vector with all components of "),a("code",[e._v("a")]),e._v(" casted into type "),a("code",[e._v("dt")])]),e._v(" "),a("p",[e._v("E.g., :")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("# Taichi-scope\na = ti.Vector([1.6, 2.3])\na.cast(ti.i32) # [2, 3]\n")])])]),a("p",[e._v("See "),a("code",[e._v("type")]),e._v('{.interpreted-text role="ref"} for more details.\n:::')]),e._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[e._v("注解")]),e._v(" "),a("p",[e._v("Vectors are special matrices with only 1 column. In fact, "),a("code",[e._v("ti.Vector")]),e._v(" is\njust an alias of "),a("code",[e._v("ti.Matrix")]),e._v(".")])]),e._v(" "),a("h2",{attrs:{id:"metadata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#metadata"}},[e._v("#")]),e._v(" Metadata")]),e._v(" "),a("p",[e._v("::: {.attribute}\na.n")]),e._v(" "),a("p",[e._v("parameter a")]),e._v(" "),a("p",[e._v(": (ti.Vector or ti.Vector.field)")]),e._v(" "),a("p",[e._v("return")]),e._v(" "),a("p",[e._v(": (scalar) return the dimensionality of vector "),a("code",[e._v("a")])]),e._v(" "),a("p",[e._v("E.g., :")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("# Taichi-scope\na = ti.Vector([1, 2, 3])\na.n  # 3\n\n# Python-scope\na = ti.Vector.field(3, dtype=ti.f32, shape=(4, 5))\na.n  # 3\n\nSee :ref:`meta` for more details.\n")])])]),a("p",[e._v(":::")]),e._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[e._v("注解")]),e._v(" "),a("p",[e._v("When used as a global vector field, it will additionally contain all the\nmetadata that a scalar field would have, E.g.:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("# Python-scope\na = ti.Vector.field(3, dtype=ti.f32, shape=(4, 5))\na.shape  # (4, 5)\na.dtype  # ti.f32\n")])])])]),e._v(" "),a("h2",{attrs:{id:"element-wise-operations-wip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#element-wise-operations-wip"}},[e._v("#")]),e._v(" Element-wise operations (WIP)")]),e._v(" "),a("p",[e._v("TODO: add element wise operations docs")])])}),[],!1,null,null,null);t.default=o.exports}}]);